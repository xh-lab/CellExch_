rdata_dir = "~/Dropbox/Iso Discovery/Codes/discovery/rdata/simu_polyester/"
data = lapply(1:9, function(sp){
da = lapply(1:9 , function(gtfid){
tp = lapply(1:4, function(mm){
if(mm == 1){
load(paste0(rdata_dir, "sample", sp, "gtf", gtfid, "_p-2.RData"))
LRT_simu_res = LRT_simu_res[!sapply(LRT_simu_res, is.null)]
tv = sapply(LRT_simu_res, function(x) x[[1]]$tv)
}else if(mm == 2){
tv = readRDS(paste0("~/Dropbox/Iso Discovery/Codes/compare_abundance/cufflinks/sp",
sp, "gtf", gtfid, ".rds"))
}else if(mm == 3){
tv = readRDS(paste0("~/Dropbox/Iso Discovery/Codes/compare_abundance/stringtie/sp",
sp, "gtf", gtfid, ".rds"))
}else{
tv = readRDS(paste0("~/Dropbox/Iso Discovery/Codes/compare_abundance/slide/sp",
sp, "gtf", gtfid, ".rds"))
}
tv = unlist(tv)
return(data.frame(tv = tv, method = methods[mm]))
})
tp = Reduce(rbind, tp)
tp$annotation = gtfid
return(tp)
})
da = Reduce(rbind, da)
da$sample = sp
return(da)
})
methods = c("LRT", "Cufflinks", "Stringtie", "SLIDE")
data = lapply(1:9, function(sp){
da = lapply(1:9 , function(gtfid){
tp = lapply(1:4, function(mm){
if(mm == 1){
load(paste0(rdata_dir, "sample", sp, "gtf", gtfid, "_p-2.RData"))
LRT_simu_res = LRT_simu_res[!sapply(LRT_simu_res, is.null)]
tv = sapply(LRT_simu_res, function(x) x[[1]]$tv)
}else if(mm == 2){
tv = readRDS(paste0("~/Dropbox/Iso Discovery/Codes/compare_abundance/cufflinks/sp",
sp, "gtf", gtfid, ".rds"))
}else if(mm == 3){
tv = readRDS(paste0("~/Dropbox/Iso Discovery/Codes/compare_abundance/stringtie/sp",
sp, "gtf", gtfid, ".rds"))
}else{
tv = readRDS(paste0("~/Dropbox/Iso Discovery/Codes/compare_abundance/slide/sp",
sp, "gtf", gtfid, ".rds"))
}
tv = unlist(tv)
return(data.frame(tv = tv, method = methods[mm]))
})
tp = Reduce(rbind, tp)
tp$annotation = gtfid
return(tp)
})
da = Reduce(rbind, da)
da$sample = sp
return(da)
})
data = lapply(1:8, function(sp){
da = lapply(1:9 , function(gtfid){
tp = lapply(1:4, function(mm){
if(mm == 1){
load(paste0(rdata_dir, "sample", sp, "gtf", gtfid, "_p-2.RData"))
LRT_simu_res = LRT_simu_res[!sapply(LRT_simu_res, is.null)]
tv = sapply(LRT_simu_res, function(x) x[[1]]$tv)
}else if(mm == 2){
tv = readRDS(paste0("~/Dropbox/Iso Discovery/Codes/compare_abundance/cufflinks/sp",
sp, "gtf", gtfid, ".rds"))
}else if(mm == 3){
tv = readRDS(paste0("~/Dropbox/Iso Discovery/Codes/compare_abundance/stringtie/sp",
sp, "gtf", gtfid, ".rds"))
}else{
tv = readRDS(paste0("~/Dropbox/Iso Discovery/Codes/compare_abundance/slide/sp",
sp, "gtf", gtfid, ".rds"))
}
tv = unlist(tv)
return(data.frame(tv = tv, method = methods[mm]))
})
tp = Reduce(rbind, tp)
tp$annotation = gtfid
return(tp)
})
da = Reduce(rbind, da)
da$sample = sp
return(da)
})
data = Reduce(rbind, data)
data$annotation = factor(data$annotation, levels = 1:9)
cols = c(Cufflinks = "#619CFF", LRT = "#D53E4F",
Stringtie = "#00BA38", SLIDE = "#B79F00")
ggplot(data, aes(x = annotation, y = tv, fill = method)) +
geom_boxplot(aes(ymin=..lower.., ymax=..upper..), outlier.size = NA) +
theme_bw() +
facet_grid(sample ~.) +
scale_fill_manual(values = cols) +
theme(strip.background = element_rect(fill = "white"))
ggsave(paste0(dir, "tv_boxplot.pdf"), width = 6, height = 15)
library(ggplot2)
ggplot(data, aes(x = annotation, y = tv, fill = method)) +
geom_boxplot(aes(ymin=..lower.., ymax=..upper..), outlier.size = NA) +
theme_bw() +
facet_grid(sample ~.) +
scale_fill_manual(values = cols) +
theme(strip.background = element_rect(fill = "white"))
ggsave(paste0(dir, "tv_boxplot.pdf"), width = 6, height = 15)
dir = "~/Dropbox/Iso Discovery/Codes/compare_abundance/"
ggsave(paste0(dir, "tv_boxplot.pdf"), width = 6, height = 15)
dir = "~/Dropbox/Iso Discovery/Codes/compare_transcripts/simulation/pr_by_gene/"
methods = c("LRT", "Cufflinks", "Stringtie", "SLIDE")
data = lapply(1:1, function(sp){
tp2 = lapply(1:9, function(gtfid){
tp1 = lapply(1:4, function(mm){
if(mm == 1){
rdata_dir = "~/Dropbox/Iso Discovery/Codes/discovery/rdata/simu_polyester/"
load(paste0(rdata_dir, "sample", sp, "gtf", gtfid, "_p-2.RData"))
LRT_simu_res = LRT_simu_res[!sapply(LRT_simu_res, is.null)]
pr = t(sapply(LRT_simu_res, function(x) c(x[[1]]$prec, x[[1]]$reca)))
}else if(mm == 2){
pr = readRDS(paste0(dir, "cufflinks/", sp, "gtf", gtfid, ".rds"))
pr = Reduce(rbind, pr)
}else if(mm == 3){
pr = readRDS(paste0(dir, "stringtie/", sp, "gtf", gtfid, ".rds"))
pr = Reduce(rbind, pr)
}else{
pr = readRDS(paste0(dir, "slide/", sp, "gtf", gtfid, ".rds"))
pr = Reduce(rbind, pr)
}
res = data.frame(precision = pr[,1], recall = pr[,2], method = methods[mm])
return(res)
})
tp1 = Reduce(rbind, tp1)
tp1$annotation = gtfid
return(tp1)
})
tp2 = Reduce(rbind, tp2)
tp2$sample = sp
return(tp2)
})
data = Reduce(rbind, data)
data$annotation = factor(data$annotation, levels = 1:9)
cols = c(Cufflinks = "#619CFF", LRT = "#D53E4F",
Stringtie = "#00BA38", SLIDE = "#B79F00")
ggplot(data, aes(x = annotation, y = precision, fill = method)) +
geom_boxplot() +
theme_bw() +
facet_grid(sample ~.) +
scale_fill_manual(values = cols) +
theme(strip.background = element_rect(fill = "white"))
ggplot(data, aes(x = annotation, y = precision, fill = method)) +
geom_boxplot(aes(ymin=..lower.., ymax=..upper..), outlier.size = NA) +
theme_bw() +
facet_grid(sample ~.) +
scale_fill_manual(values = cols) +
theme(strip.background = element_rect(fill = "white"))
ggplot(data, aes(x = annotation, y = recall, fill = method)) +
geom_boxplot(aes(ymin=..lower.., ymax=..upper..), outlier.size = NA) +
theme_bw() +
facet_grid(sample ~.) +
scale_fill_manual(values = cols) +
theme(strip.background = element_rect(fill = "white"))
methods = c("LRT", "Cufflinks", "Stringtie", "SLIDE")
data = lapply(1:1, function(sp){
tp2 = lapply(1:9, function(gtfid){
tp1 = lapply(1:4, function(mm){
if(mm == 1){
rdata_dir = "~/Dropbox/Iso Discovery/Codes/discovery/rdata/simu_polyester/"
load(paste0(rdata_dir, "sample", sp, "gtf", gtfid, "_p-2.RData"))
LRT_simu_res = LRT_simu_res[!sapply(LRT_simu_res, is.null)]
pr = t(sapply(LRT_simu_res, function(x) c(x[[1]]$prec, x[[1]]$reca)))
}else if(mm == 2){
pr = readRDS(paste0(dir, "cufflinks/", sp, "gtf", gtfid, ".rds"))
pr = Reduce(rbind, pr)
}else if(mm == 3){
pr = readRDS(paste0(dir, "stringtie/", sp, "gtf", gtfid, ".rds"))
pr = Reduce(rbind, pr)
}else{
pr = readRDS(paste0(dir, "slide/", sp, "gtf", gtfid, ".rds"))
pr = Reduce(rbind, pr)
}
res = data.frame(precision = pr[,1], recall = pr[,2], method = methods[mm])
return(res)
})
tp1 = Reduce(rbind, tp1)
tp1$annotation = gtfid
return(tp1)
})
tp2 = Reduce(rbind, tp2)
tp2$sample = sp
return(tp2)
})
data = Reduce(rbind, data)
data$annotation = factor(data$annotation, levels = 1:9)
dir
cols = c(Cufflinks = "#619CFF", LRT = "#D53E4F",
Stringtie = "#00BA38", SLIDE = "#B79F00")
ggplot(data, aes(x = annotation, y = precision, fill = method)) +
geom_boxplot(aes(ymin=..lower.., ymax=..upper..), outlier.size = NA) +
theme_bw() +
facet_grid(sample ~.) +
scale_fill_manual(values = cols) +
theme(strip.background = element_rect(fill = "white"))
ggsave(paste0(dir, "precision_boxplot.pdf"), width = 6, height = 15)
data = lapply(1:8, function(sp){
print(sp)
tp2 = lapply(1:9, function(gtfid){
tp1 = lapply(1:4, function(mm){
if(mm == 1){
rdata_dir = "~/Dropbox/Iso Discovery/Codes/discovery/rdata/simu_polyester/"
load(paste0(rdata_dir, "sample", sp, "gtf", gtfid, "_p-2.RData"))
LRT_simu_res = LRT_simu_res[!sapply(LRT_simu_res, is.null)]
pr = t(sapply(LRT_simu_res, function(x) c(x[[1]]$prec, x[[1]]$reca)))
}else if(mm == 2){
pr = readRDS(paste0(dir, "cufflinks/", sp, "gtf", gtfid, ".rds"))
pr = Reduce(rbind, pr)
}else if(mm == 3){
pr = readRDS(paste0(dir, "stringtie/", sp, "gtf", gtfid, ".rds"))
pr = Reduce(rbind, pr)
}else{
pr = readRDS(paste0(dir, "slide/", sp, "gtf", gtfid, ".rds"))
pr = Reduce(rbind, pr)
}
res = data.frame(precision = pr[,1], recall = pr[,2], method = methods[mm])
return(res)
})
tp1 = Reduce(rbind, tp1)
tp1$annotation = gtfid
return(tp1)
})
tp2 = Reduce(rbind, tp2)
tp2$sample = sp
return(tp2)
})
data = Reduce(rbind, data)
data$annotation = factor(data$annotation, levels = 1:9)
cols = c(Cufflinks = "#619CFF", LRT = "#D53E4F",
Stringtie = "#00BA38", SLIDE = "#B79F00")
ggplot(data, aes(x = annotation, y = precision, fill = method)) +
geom_boxplot(aes(ymin=..lower.., ymax=..upper..), outlier.size = NA) +
theme_bw() +
facet_grid(sample ~.) +
scale_fill_manual(values = cols) +
theme(strip.background = element_rect(fill = "white"))
ggsave(paste0(dir, "precision_boxplot.pdf"), width = 6, height = 15)
ggplot(data, aes(x = annotation, y = recall, fill = method)) +
geom_boxplot(aes(ymin=..lower.., ymax=..upper..), outlier.size = NA) +
theme_bw() +
facet_grid(sample ~.) +
scale_fill_manual(values = cols) +
theme(strip.background = element_rect(fill = "white"))
ggsave(paste0(dir, "recall_boxplot.pdf"), width = 6, height = 15)
41/56
class(NULL)
names = read.table("~/Dropbox/Iso Discovery/Codes/melanoma/DP2_names.txt",
stringsAsFactors = FALSE)
names = as.character(names[,1])
names_split = strsplit(names, split = "-")
pt = sapply(names_split, function(x) x[1])
pt_uniq = unique(pt)
### star
commands = lapply(1:length(pt_uniq), function(i){
ptid = pt_uniq[i]
titles = names_split[pt == ptid]
titles = sapply(titles, function(x) paste0(x[1], "-", x[2], "_", x[3]))
titles = paste0("${Dfastq}", titles)
f1 = paste(paste0(titles, "_R1.fastq"), sep = "", collapse = ",")
f2 = paste(paste0(titles, "_R2.fastq"), sep = "", collapse = ",")
cd = paste("STAR --genomeDir ${GenomeDir} --readFilesIn",
f1, f2,
"--runThreadN 12 --outSAMstrandField intronMotif --outSAMtype BAM SortedByCoordinate",
"--outFileNamePrefix", paste0("~/data/melanoma/", ptid, "-DP2"))
return(cd)
})
commands = unlist(commands)
write(commands, "~/Dropbox/Iso Discovery/Codes/melanoma/star_align_DP2.sh", sep="\n")
### samtools index
commands = lapply(pt_uniq, function(pt){
bam_path = paste0(pt, "-DP2Aligned.sortedByCoord.out.bam")
cd = paste("samtools index", bam_path)
return(cd)
})
commands = unlist(commands)
write(commands, "~/Dropbox/Iso Discovery/Codes/melanoma/samtools_index_DP2.sh", sep="\n")
names = read.table("~/Dropbox/Iso Discovery/Codes/melanoma/DP2_names.txt",
stringsAsFactors = FALSE)
names = as.character(names[,1])
names_split = strsplit(names, split = "-")
pt = sapply(names_split, function(x) x[1])
pt_uniq = unique(pt)
### star
commands = lapply(1:length(pt_uniq), function(i){
ptid = pt_uniq[i]
titles = names_split[pt == ptid]
titles = sapply(titles, function(x) paste0(x[1], "-", x[2], "_", x[3]))
titles = paste0("${Dfastq}", titles)
f1 = paste(paste0(titles, "_R1.fastq"), sep = "", collapse = ",")
f2 = paste(paste0(titles, "_R2.fastq"), sep = "", collapse = ",")
cd = paste("STAR --genomeDir ${GenomeDir} --readFilesIn",
f1, f2,
"--runThreadN 12 --outSAMstrandField intronMotif --outSAMtype BAM SortedByCoordinate",
"--outFileNamePrefix", paste0("~/data/melanoma/", ptid, "-DP2"))
return(cd)
})
commands = unlist(commands)
write(commands, "~/Dropbox/Iso Discovery/melanoma/star_align_DP2.sh", sep="\n")
### samtools index
commands = lapply(pt_uniq, function(pt){
bam_path = paste0(pt, "-DP2Aligned.sortedByCoord.out.bam")
cd = paste("samtools index", bam_path)
return(cd)
})
commands = unlist(commands)
write(commands, "~/Dropbox/Iso Discovery/melanoma/samtools_index_DP2.sh", sep="\n")
names = read.table("~/Dropbox/Iso Discovery/melanoma/DP2_names.txt",
stringsAsFactors = FALSE)
names = as.character(names[,1])
names_split = strsplit(names, split = "-")
pt = sapply(names_split, function(x) x[1])
pt_uniq = unique(pt)
### star
commands = lapply(1:length(pt_uniq), function(i){
ptid = pt_uniq[i]
titles = names_split[pt == ptid]
titles = sapply(titles, function(x) paste0(x[1], "-", x[2], "_", x[3]))
titles = paste0("${Dfastq}", titles)
f1 = paste(paste0(titles, "_R1.fastq"), sep = "", collapse = ",")
f2 = paste(paste0(titles, "_R2.fastq"), sep = "", collapse = ",")
cd = paste("STAR --genomeDir ${GenomeDir} --readFilesIn",
f1, f2,
"--runThreadN 12 --outSAMstrandField intronMotif --outSAMtype BAM SortedByCoordinate",
"--outFileNamePrefix", paste0("~/data/melanoma/", ptid, "-DP2"))
return(cd)
})
commands = unlist(commands)
write(commands, "~/Dropbox/Iso Discovery/melanoma/star_align_DP2.sh", sep="\n")
### samtools index
commands = lapply(pt_uniq, function(pt){
bam_path = paste0(pt, "-DP2Aligned.sortedByCoord.out.bam")
cd = paste("samtools index", bam_path)
return(cd)
})
commands = unlist(commands)
write(commands, "~/Dropbox/Iso Discovery/melanoma/samtools_index_DP2.sh", sep="\n")
names = read.table("~/Dropbox/Iso Discovery/melanoma/DP2_names.txt",
stringsAsFactors = FALSE)
names = as.character(names[,1])
names_split = strsplit(names, split = "-")
pt = sapply(names_split, function(x) x[1])
pt_uniq = unique(pt)
pt_uniq
names = read.table("~/Dropbox/Iso Discovery/Codes/melanoma/baseline_names.txt",
stringsAsFactors = FALSE)
names = as.character(names[,1])
names_split = strsplit(names, split = "-")
pt = sapply(names_split, function(x) x[1])
pt_uniq = unique(pt)
names = read.table("~/Dropbox/Iso Discovery/melanoma/baseline_names.txt",
stringsAsFactors = FALSE)
names = as.character(names[,1])
names_split = strsplit(names, split = "-")
pt = sapply(names_split, function(x) x[1])
pt_uniq = unique(pt)
pt_uniq
names = read.table("~/Dropbox/Iso Discovery/Codes/melanoma/DP1_names.txt",
stringsAsFactors = FALSE)
names = as.character(names[,1])
names_split = strsplit(names, split = "-")
pt = sapply(names_split, function(x) x[1])
pt_uniq = unique(pt)
names = read.table("~/Dropbox/Iso Discovery/melanoma/DP1_names.txt",
stringsAsFactors = FALSE)
names = as.character(names[,1])
names_split = strsplit(names, split = "-")
pt = sapply(names_split, function(x) x[1])
pt_uniq = unique(pt)
pt_uniq
library("ggplot2")
109 + 289 +199 +109
706-30
676 - 20*3
706-50
656-60
c(1:6, 8:10, 15:20)
c(1, 3:6, 8:10, 15:17, 20)
intersect(c(1:6, 8:10, 15:20), c(1, 3:6, 8:10, 15:17, 20))
log10(10)
log10(0.1)
log(1)
log(2)
install.packages("RPEnsemble")
devtools::install_github("AndreaCirilloAC/updateR")
library(updateR)
updateR(admin_password = "l19921020")
R.version
